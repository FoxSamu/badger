package net.foxboi.badger.model

import io.ktor.server.plugins.*
import net.foxboi.badger.expr.Expr
import net.foxboi.badger.expr.Value
import net.foxboi.badger.model.dyn.LocalScope
import net.foxboi.badger.serial.bulk.SerialEntry

class Bulk {
    val options = mutableMapOf<String, BulkOption>()

    val scope = LocalScope()

    fun addOption(option: BulkOption) {
        options[option.name] = option
    }

    fun set(name: String, value: Value<*>) {
        scope.set(name, value)
    }

    fun set(name: String, value: Expr) {
        scope.set(name, value)
    }

    fun unset(name: String) {
        scope.unset(name)
    }

    fun instantiate(list: List<SerialEntry>): BulkInstance {
        return BulkInstance(this, list.mapIndexed { index, it ->
            val option = options[it.type]
                ?: throw BadRequestException("Unknown element type ${it.type} at bulk index $index")
            option.instantiateEntry(index, it)
        })
    }

    fun writeHelp(): String {
        return buildString {
            append("Bulk Overview\n")
            append("=============\n")
            append("Listed below are all the types of entries that can be generated by this bulk endpoint.")
            append("\n")
            for ((_, route) in options) {
                append(route.writeHelp())
            }
        }
    }
}